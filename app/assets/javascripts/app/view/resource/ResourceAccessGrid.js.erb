/**
 * For ideas: http://localhost:8000/build/examples/restful/restful.js
 */
Ext.define('CD.view.resource.ResourceAccessGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.resourceaccessgrid',

    store: 'ResourceAccessStore',


    initComponent: function() {
        var me = this;

        var rowEditing = Ext.create('Ext.grid.plugin.RowEditing', {

            listeners: {
                cancelEdit: function(rowEditing, context) {
                    // Canceling editing of a locally added, unsaved record: remove it
                    if (context.record.phantom) {
                        store.remove(context.record);
                    }
                }
            }
        });

        /**
         * enable/disable delete button based on selected rows
         */
        me.getSelectionModel().on('selectionchange', function(selModel, selections){
            me.down('#delete').setDisabled(selections.length === 0);
        });

        Ext.applyIf(me, {

            plugins: [rowEditing],

            columns: [
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'name',
                    width: 250,
                    text: 'Name'
                },
                {
                    xtype: 'gridcolumn',
                    flex: 1,
                    dataIndex: 'description',
                    text: 'Description',
                    editor: {
                        xtype: 'textfield',
                        allowBlank: false
                    }
                }
            ],

            dockedItems: [{
                xtype: 'toolbar',
                items: [{
                    itemId: 'delete',
                    text: 'Delete',
                    icon: '<%= asset_path 'extjs/delete.png' %>',
                    disabled: true,
                    handler: function(){
                        var selection = me.getView().getSelectionModel().getSelection()[0];
                        if (selection) {
                            me.getStore().remove(selection);
                        }
                    }
                }]
            }]
        });

        me.callParent(arguments);
    }

});