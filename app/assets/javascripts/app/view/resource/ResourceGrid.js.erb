Ext.define('CD.view.resource.ResourceGrid', {
    extend: 'Ext.grid.Panel',
    alias: 'widget.resourcegrid',

    store: 'ResourceStore',
    itemId: 'resourceGridItemId',


    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            columns: [
                {
                    xtype: 'gridcolumn',
                    width: 250,
                    dataIndex: 'name',
                    text: 'Name',
                    editor: {
                        xtype: 'textfield'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    dataIndex: 'resource_type',
                    text: 'Type',
                    editor: {
                        xtype: 'textfield'
                    }
                },
                {
                    xtype: 'gridcolumn',
                    flex: 1,
                    dataIndex: 'description',
                    text: 'Description',
                    editor: {
                        xtype: 'textfield'
                    }
                }
            ],

            dockedItems: [
                {
                    xtype: 'toolbar',
                    dock: 'top',
                    items: [
                        {
                            xtype: 'textfield',
                            fieldLabel: 'Search tags:',
                            labelAlign: 'right',
                            listeners: {
                                change: function(field, newValue, oldValue) {
                                    var store = Ext.getStore('ResourceStore');
                                    if(!newValue || newValue.length <= 0){
                                        store.clearFilter();
                                    }else{
                                        store.filterBy(function(record){
                                            if(record.get('tags')){
                                                return record.get('tags').indexOf(newValue) > -1
                                            }else{
                                                false
                                            }

                                        });
                                    }
                                }
                            }
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    }

});